@model Task2.Models.BigModel
@{
    ViewBag.Title = "Create";
}
@Scripts.Render("~/bundles/ckeditor")
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<script src="~/Scripts/ckfinder/ckfinder.js"></script>
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Company</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Company.tName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Company.tName, new { @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.Company.tName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Company.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Company.Description, new { @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.Company.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Company.UserImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Company.UserImage, new { @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.Company.UserImage, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Company.Video, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Company.Video, new { @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.Company.Video, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Company.Money, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Company.Money, new { @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.Company.Money, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Company.Tematic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Company.Tematic, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Company.Tematic, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Company.Galery, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Company.Galery, new { @class = "ckeditor" })
            @Html.ValidationMessageFor(model => model.Company.Galery, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    document.addEventListener("DOMContentLoaded", function (event) {

        //CKEditor 4
        //  CKEDITOR.timestamp = "v=2";
        var editor = CKEDITOR.replace('content1');
        CKFinder.setupCKEditor(editor);

    });
</script>