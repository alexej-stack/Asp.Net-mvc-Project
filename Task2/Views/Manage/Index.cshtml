@model PagedList.IPagedList<Task2.Models.Company>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<!--

{
    ViewBag.Title = "LOL";
    WebGrid grid = new WebGrid(Model, rowsPerPage: 10);
}

<h2>ViewBag.Title.</h2>
<script type="text/javascript">

    $(document).ready(function () {
        $('#DataTable').DataTable();
        $('#checkBoxAll').click(function () {
            if ($(this).is(":checked")) {
                $(".chkCheckBoxId").prop("checked", true)
            }
            else {
                $(".chkCheckBoxId").prop("checked", false)
            }
        });
    });
</script>-->
<html>
<head>
    <script type="text/javascript" src="@Url.Content("~/Scripts/")jquery-3.4.1.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            $('#DataTable').DataTable();
            $('#checkBoxAll').click(function () {
                if ($(this).is(":checked")) {
                    $(".chkCheckBoxId").prop("checked", true)
                }
                else {
                    $(".chkCheckBoxId").prop("checked", false)
                }
            });
        });
        /* $('#selectAll').click(function (e) {
             var table = $(e.target).closest('table');
             $('td input:checkbox', table).prop('checked', this.checked);
         });*/
        /* $(document).on('click', '.select-all', function (e) {
             var table = $(this).closest('table');
             table.find(':checkbox').not(this).prop('checked', this.checked);
         });*/
        /* $("checkall").change(function () {
                 $(".checkitem").prop("checked", this.prop("checked"))
             })
         $(".checkitem").change(function () {
             if ($(this).prop("checked") == false) {
                 $("#checkall").prop("cheked", false)
             }
             if ($(".chekitem:cheked").length == $(".chekitem").length) {
                 $("#checkall").prop("cheked", true)
             }
             })*/
    </script>
</head>
<body>
    <h4>Список оплаченных бонусов(пока нет)</h4>
   
    <div class="dl-horizontal">
        <table id="DataTable" style="width:100%;" class="table table-bordered">
            <thead>
                <tr>
                    <th><input type="checkbox" id="select-all" class="custom-checkbox" /></th>

                    <th>Name</th>
                    <th>Price</th>



                </tr>
            </thead>
            <tbody>
                @foreach (var bonus in ViewBag.ListBonus)
                {
                <tr>
                    <td><input type="checkbox" name="ID" value="@bonus.Id" class="custom-checkbox chkCheckBoxId" /></td>
                    <td>@bonus.Name</td>
                    <td>@bonus.price</td>


                </tr>
                }
            </tbody>
        </table>
    </div>
    <div>@Html.ActionLink("Create", "Create") </div>
    <div>@Html.ActionLink("CreateBonus", "CreateBonus") </div>
    <div>
        @using (Html.BeginForm("Index", "Manage", FormMethod.Get))
        {
            <button name="style" type="submit" value="ChangeTheme" class="btn btn-default">Theme</button>

            <h4>Список компаний</h4>
            <hr />
            <div class="dl-horizontal">
                <table id="DataTable" style="width:100%;" class="table table-bordered">
                    <thead>
                        <tr>

                            <th><input type="checkbox" id="checkall" /></th>
                            <th>  @Html.ActionLink("tName", "Index", new { sortOrder = ViewBag.NameSortParm })</th>
                            <th>@Html.ActionLink("Description", "Index", new { sortOrder = ViewBag.NameSortParm })</th>
                            <th>Tematic</th>
                            <th>Departments</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var tematic in Model)
                        {
                            <tr>
                                <td><input type="checkbox" class="chkCheckBoxId" /></td>
                                <td>@Html.DisplayFor(modelItem => tematic.tName)</td>
                                <td>@Html.DisplayFor(modelItem => tematic.Description)</td>
                                <td>@Html.DisplayFor(modelItem => tematic.Tematic)</td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = tematic.ID })|
                                    @Html.ActionLink("Delete", "Delete", new { id = tematic.ID })|
                                    @Html.ActionLink("Details", "Details", new { id = tematic.ID })
                                </td>aa
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div>
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager(Model, page => Url.Action("Index",
                    new { page, sortOrder = ViewBag.CurrentSort }))
            </div>
            <h4>Список бонусов компаний</h4>
            <div class="dl-horizontal">
                <table id="DataTable" style="width:100%;" class="table table-bordered">
                    <thead>
                        <tr>
                            <th><input type="checkbox" id="select-all" class="custom-checkbox" /></th>

                            <th>Name</th>
                            <th>Price</th>



                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var bonus in ViewBag.ListBonus)
                        {
                            <tr>
                                <td><input type="checkbox" name="ID" value="@bonus.Id" class="custom-checkbox chkCheckBoxId" /></td>
                                <td>@bonus.Name</td>
                                <td>@bonus.price</td>


                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        <!--
    <h2>Профиль участника</h2>
    <hr />
    <div class="row">
        grid.GetHtml(
            tableStyle:"table table-responsive table-striped table-bordered",
            columns: grid.Columns(
                grid.Column(header:"First Name", format:<text><div class="edit" data-id="item.ID" data-propertyname="FirstName">item.FirstName</div></text>),
                                          grid.Column(header: "Last Name", format:<text><div class="edit" data-id="item.ID" data-propertyname="LastName">item.LastName</div></text>),
                                                               grid.Column(header: "DOB", format:<text><div class="editDate" data-id="item.ID" data-propertyname="DOB">string.Format("{0:dd-MMM-yyyy}", item.DOB)</div></text>)
                                                                                        )
                                                                                    )
    </div>
    <style>
        .table td {
            width: 25%;
        }
    </style>
        -->
        @section scripts{
            <script src="https://www.appelsiini.net/download/jquery.jeditable.js"></script>
            <script>
                $(document).ready(function () {
                    var oldValue = '';
                    $('.edit').editable('/home/saveuser', {
                        cssclass: 'jeditForm',
                        tooltip: 'click to edit me...',
                        width: 'none',
                        height: 'none',
                        onsubmit: function (settings, original) {
                            oldValue = original.revert;
                        },
                        submitdata: function () {
                            return {
                                id: $(this).data('id'),
                                PropertyName: $(this).data('propertyname')
                            }
                        },
                        callback: function (value, settings) {
                            var jsonData = $.parseJSON(value);
                            if (jsonData.status) {
                                $(this).text(jsonData.value);
                            }
                            else {
                                $(this).text(oldValue);
                            }
                        }
                    })
                })
            </script>
        }






    </div>
</body>
</html>